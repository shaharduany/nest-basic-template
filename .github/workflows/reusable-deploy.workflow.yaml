name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      namespace:
        required: true
        type: string
      region:
        required: true
        type: string
        default: 'europe-west2'
      cluster_name:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
      docker_image_name:
        required: true
        type: string
      dockerfile_path:
        required: true
        type: string
      docker_region: 
        required: true
        type: string
      env_file_path:
        required: true
        type: string

env:
  DOCKER_IMAGE_URL: ${{ inputs.docker_region }}-docker.pkg.dev/${{ secrets.PROJECT_NAME }}/app-catcher-v2/${{ inputs.docker_image_name }}:latest

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
   
    - name: Setup SOPS
      uses: nhedger/setup-sops@v2

    - name: Prepare .env file from SOPS
      run: |
        sops decrypt ${{ inputs.env_file_path }} > .env

    - name: Configure Docker to use Google Artifact Registry
      run: |
        gcloud --quiet auth configure-docker ${{ inputs.docker_region }}-docker.pkg.dev

    - name: Build and Push Docker Image
      run: |
        docker build --build-arg PROJECT_NAME=${{ secrets.PROJECT_NAME }} -t ${{ env.DOCKER_IMAGE_URL }} . -f ${{ inputs.dockerfile_path }}
        docker push ${{ env.DOCKER_IMAGE_URL }}
  
    - name: Logout from Docker
      run: docker logout ${{ inputs.docker_region }}-docker.pkg.dev
  
    - name: Set up kubectl
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials ${{ inputs.cluster_name }} --region ${{ inputs.region }}

    - name: Print Kubernetes Deployment
      run: |
        kubectl get deployments -n ${{ inputs.namespace }}

    - name: Deploy to GKE
      run: |
        # Check the current state of the deployment
        kubectl describe deployment/${{ inputs.deployment_name}} -n ${{ inputs.namespace }}
        
        # Update the image for the deployment
        kubectl set image deployment/${{ inputs.deployment_name }} -n ${{ inputs.namespace }} ${{ inputs.deployment_name }}=${{ env.DOCKER_IMAGE_URL }}
        
        # Check the status of the rollout
        kubectl rollout status deployment/${{ inputs.deployment_name }} -n ${{ inputs.namespace }}